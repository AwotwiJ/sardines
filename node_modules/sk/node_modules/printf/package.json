{
  "name": "printf",
  "version": "0.0.4",
  "description": "Write formatted data (printf and sprintf)",
  "author": {
    "name": "David Worms",
    "email": "david@adaltas.com"
  },
  "main": "./lib/printf",
  "engines": {
    "node": ">= 0.1.90"
  },
  "readme": "\n<pre>\n            _       _    __ \n           (_)     | |  / _|\n _ __  _ __ _ _ __ | |_| |_ \n| '_ \\| '__| | '_ \\| __|  _|\n| |_) | |  | | | | | |_| |  \n| .__/|_|  |_|_| |_|\\__|_|  \n| |                         \n|_| \n</pre>\n\nA complete implementation of `sprintf` and `printf` for Node. The code is \nstrongly inspired by the one availabe in the [Dojo Toolkit][dojo].\n\nUsage\n-----\n\nsprintf\n\n``` javascript\n    var printf = require('printf');\n    var string = printf(format, args...);\n```\n\nprintf\n\n``` javascript\n    var printf = require('printf');\n    printf(write_stream, format, args...);\n```\n\nExemples\n--------\n\n``` javascript\n    var printf = require('printf');\n```\n    \nFlag: (space)\n\n``` javascript\n    assert.eql('  -42', printf('% 5d', -42));\n```\n\nFlag: +\n\n``` javascript\n    assert.eql('  +42', printf('%+5d', 42));\n```\n\nFlag: 0\n\n``` javascript\n    assert.eql('00042', printf('%05d', 42));\n```\n\nFlag: -\n\n``` javascript\n    assert.eql('42   ', printf('%-5d', 42));\n```\n\nPrecision\n\n``` javascript\n    assert.eql('42.90', printf('%.2f', 42.8952));\n    assert.eql('042.90', printf('%06.2f', 42.8952));\n```\n\nBases\n\n``` javascript\n    assert.eql('\\x7f', printf('%c', 0x7f));\n```\n\nMapping\n\n``` javascript\n    assert.eql('Hot Pocket', printf('%1$s %2$s', 'Hot', 'Pocket'));\n    assert.eql('Hot Pocket', printf('%(temperature)s %(crevace)s', {\n        temperature: 'Hot',\n        crevace: 'Pocket'\n    }));\n```\n\nPositionals\n\n``` javascript\n    assert.eql(' foo', printf('%*s', 'foo', 4));\n    assert.eql('      3.14', printf('%*.*f', 3.14159265, 10, 2));\n    assert.eql('0000003.14', printf('%0*.*f', 3.14159265, 10, 2));\n    assert.eql('3.14      ', printf('%-*.*f', 3.14159265, 10, 2));\n```\n\nMiscellaneous\n\n``` javascript\n    assert.eql('+hello+', printf('+%s+', 'hello'));\n    assert.eql('+10+', printf('+%d+', 10));\n    assert.eql('a', printf('%c', 'a'));\n    assert.eql('\"', printf('%c', 34));\n    assert.eql('$', printf('%c\", 36));\n    assert.eql('10', printf('%d', 10));\n```\n\nHuman readable output with `util.inspect`\n\n``` javascript\n    assert.eql(\"Debug: { hello: 'Node' }\", prinf('Debug: %O', {hello: 'Node'});\n```\n\nInstalling\n----------\n\nVia [npm](http://github.com/isaacs/npm):\n\n```\n    $ npm install printf\n```\n\nVia git (or downloaded tarball):\n\n```\n    $ git clone http://github.com/wdavidw/node-printf.git\n```\n\nTest\n----\n\n```\n    expresso\n```\n\n\n[dojo]: http://www.dojotoolkit.org  \"The Dojo Toolkit\"\n\n",
  "readmeFilename": "readme.md",
  "_id": "printf@0.0.4",
  "_from": "printf@*"
}
